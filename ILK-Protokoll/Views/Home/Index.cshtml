@using ILK_Protokoll.util
@model ILK_Protokoll.ViewModels.DashBoard

@{
	ViewBag.Title = "Dashboard";
}
<div id="javascript-warning" class="alert alert-danger jumbotron">
	<h2><strong>Für diese Seite ist JavaScript erforderlich!</strong></h2>
</div>
<script type="text/javascript">
	document.getElementById("javascript-warning").style.display = 'none';
</script>

<div class="index-action">
	@Html.ActionLink("Sitzungsmodus", "Index", "Master", new {Area = "Session"}, new {@class = "btn btn-primary"})
</div>

<h2>Push-Benachrichtigungen</h2>
<div class="row">
	<div class="col-lg-12">
		<div class="panel panel-primary">
			@if (Model.Notifications.Any())
			{
				Html.RenderPartial("~/Views/Push/_NotificationList.cshtml", Model.Notifications);
			}
			else
			{
				<div class="panel-body">
					Es sind keine Push-Benachrichtigungen vorhanden.
				</div>
			}
		</div>
	</div>
</div>

<h2>Aufgaben</h2>
<div class="row">
	<div class="col-lg-6">
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title">Meine ToDo's</h3>
			</div>
			@if (Model.MyToDos.Any())
			{
				Html.RenderPartial("~/Views/Assignments/_Table.cshtml", Model.MyToDos);
			}
			else
			{
				<div class="panel-body">
					Alles erledigt <span class="glyphicon glyphicon-thumbs-up"></span>
				</div>
			}
		</div>
	</div>

	<div class="col-lg-6">
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title">Meine Umsetzungsaufgaben</h3>
			</div>
			@if (Model.MyDuties.Any())
			{
				Html.RenderPartial("~/Views/Assignments/_Table.cshtml", Model.MyDuties);
			}
			else
			{
				<div class="panel-body">
					Alles erledigt <span class="glyphicon glyphicon-thumbs-up"></span>
				</div>
			}
		</div>
	</div>
</div>
<hr />
<div class="index-subaction">
	<a class="btn btn-default" onclick=" collapseTopicsOut(); ">Alle Themen ausklappen</a>
	<a class="btn btn-default" onclick=" collapseTopicsIn(); ">Alle Themen einklappen</a>
</div>
<h2>Diskussionspunkte</h2>
<div class="row" id="topicsContainer">
	@if (Model.MyTopics != null)
	{
		Html.RenderPartial("_Topics", Model.MyTopics);
	}
	else
	{
		<div style="height: 34px; width: 34px;" id="topicsSpinner">
			<span class="ajax-spinner"></span>
		</div>

		<script type="text/javascript" src="~/Scripts/spin.js"></script>
		<script type="text/javascript">
			var opts = {
				lines: 11, // The number of lines to draw
				length: 4, // The length of each line
				width: 2, // The line thickness
				radius: 5, // The radius of the inner circle
				corners: 1, // Corner roundness (0..1)
				rotate: 0, // The rotation offset
				direction: 1, // 1: clockwise, -1: counterclockwise
				color: '#000', // #rgb or #rrggbb or array of colors
				speed: 1, // Rounds per second
				trail: 60, // Afterglow percentage
				shadow: false, // Whether to render a shadow
				hwaccel: true, // Whether to use hardware acceleration
				className: 'spinner', // The CSS class to assign to the spinner
				zIndex: 2e9, // The z-index (defaults to 2000000000)
				top: '50%', // Top position relative to parent
				left: '50%' // Left position relative to parent
			};
			var ajaxspinner = new Spinner(opts).spin($('#topicsSpinner .ajax-spinner')[0]);

			var topicsxhr = $.ajax({
				url: '@Url.Action("_FetchTopics", "Home")',
				success: function(data) {
					$("#topicsContainer").html(data);
					msnry.reloadItems();
					PerformMasonryLayout();
				}
			});

			//if needed, abort the request later..
			$('.navbar a').click(function() {
				topicsxhr.abort();
			});
		</script>
	}
</div>

@using (Html.Delayed(null, "Masonry_Tiles"))
{
	<script type="text/javascript">
		var msnry = new Masonry('#topicsContainer', {
			itemSelector: '.masonry-item',
			resizeable: true,
		});

		var siteMuted = false;

		function muteColors() {
			if (siteMuted) {
				$('.body-content').css("background-color", "#FFF");
				$('.topic-panel').css("margin-bottom", "");
				siteMuted = false;
			} else {
				$('.body-content').css("transition", "background 500ms").css("background-color", "#333");
				$('.topic-panel').css("margin-bottom", "120px");
				siteMuted = true;
			}
			PerformMasonryLayout();
		}
	</script>
}

@using (Html.Delayed(null, "CollapseTopics"))
{
	<script type="text/javascript">
		function collapseTopicsOut() {

			$('.topic-content').show(); // Workaround, damit sich die GUI-Elemente nicht während der Animation überlappen
			PerformMasonryLayout();
			$('.topic-content').hide();

			$('.topic-panel').each(function() {
				var link = $(this).find('.panel-heading .panel-collapse-heading a');
				var content = $(this).find('.topic-content');
				collapseTopicOut(link, content);
			});
		}

		function collapseTopicsIn() {
			$('.topic-panel').each(function() {
				var link = $(this).find('.panel-heading .panel-collapse-heading a');
				var content = $(this).find('.topic-content');
				collapseTopicIn(link, content);
			});
		}
	</script>
}