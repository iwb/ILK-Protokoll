@using System.Linq
@using ILK_Protokoll.Models
@using ILK_Protokoll.util
@model ILK_Protokoll.ViewModels.DashBoard

@{
	ViewBag.Title = "Dashboard";
}
<div id="javascript-warning" class="alert alert-danger jumbotron">
	<h2><strong>Für diese Seite ist JavaScript erforderlich!</strong></h2>
</div>
<script type="text/javascript">
	document.getElementById("javascript-warning").style.display = 'none';
</script>

<div class="index-action">
	<a onclick=" muteColors(); " class="btn btn-default">Mute</a>
	@Html.ActionLink("Sitzungsmodus", "Index", "Master", new {Area = "Session"}, new {@class = "btn btn-primary"})
</div>

<h2>Push-Benachrichtigungen</h2>
<div class="row">
	<div class="col-lg-12">
		<div class="panel panel-primary">
			@if (Model.Notifications.Any())
			{
				Html.RenderPartial("~/Views/Push/_NotificationList.cshtml", Model.Notifications);
			}
			else
			{
				<div class="panel-body">
					Es sind keine Push-Benachrichtigungen vorhanden.
				</div>
			}
		</div>
	</div>
</div>

<h2>Aufgaben</h2>
<div class="row">
	<div class="col-lg-6">
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title">Meine ToDo's</h3>
			</div>
			@if (Model.MyToDos.Any())
			{
				Html.RenderPartial("~/Views/Assignments/_Table.cshtml", Model.MyToDos);
			}
			else
			{
				<div class="panel-body">
					Alles erledigt <span class="glyphicon glyphicon-thumbs-up"></span>
				</div>
			}
		</div>
	</div>

	<div class="col-lg-6">
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title">Meine Umsetzungsaufgaben</h3>
			</div>
			@if (Model.MyDuties.Any())
			{
				Html.RenderPartial("~/Views/Assignments/_Table.cshtml", Model.MyDuties);
			}
			else
			{
				<div class="panel-body">
					Alles erledigt <span class="glyphicon glyphicon-thumbs-up"></span>
				</div>
			}
		</div>
	</div>
</div>
<hr />
<h2>Diskussionspunkte</h2>
<div class="row" id="topicsContainer">
	@foreach (Topic t in Model.MyTopics)
	{
		<div class="col-lg-6 col-md-12 masonry-item">
			@{ Html.RenderPartial("~/Views/Topics/_Topic.cshtml", t); }
		</div>
	}
</div>

@using (Html.Delayed(null, "Masonry_Tiles"))
{
	<script type="text/javascript">
		var msnry = new Masonry('#topicsContainer', {
			itemSelector: '.masonry-item',
			resizeable: true,
		});

		var siteMuted = false;

		function muteColors() {
			if (siteMuted) {
				$('.body-content').css("background-color", "#FFF");
				$('.topic-panel').css("margin-bottom", "");
				siteMuted = false;
			} else {
				$('.body-content').css("transition", "background 500ms").css("background-color", "#333");
				$('.topic-panel').css("margin-bottom", "120px");
				siteMuted = true;
			}
			msnry.layout();
		}
	</script>
}