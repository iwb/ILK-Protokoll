@using ILK_Protokoll.util
@model ICollection<ILK_Protokoll.ViewModels.SearchResult>

@{
	ViewBag.Title = "Suchergebnisse";
}

<h2>@ViewBag.Title</h2>

@if (Model.Count == 1)
{
	<h4>Ihre Suche nach &quot;@ViewBag.SearchTerm&quot; hat ein Ergebnis ergeben.</h4>
}
else
{
	<h4>Ihre Suche nach &quot;@ViewBag.SearchTerm&quot; hat @Model.Count Ergebnisse ergeben.</h4>
}

<div class="row" id="searchresults">
	@foreach (var result in Model)
	{
		<div class="col-lg-6 col-md-12">
			<div class="panel panel-default">
				<div class="panel-heading" style="position: relative;">
					<div class="panel-title-right">
						@if (result.Timestamp.HasValue)
						{
							<span class="pull-right">
								@result.Timestamp.Value.ToString("d")
							</span>
						}
					</div>
					<h3 class="panel-title">
						<a href="@result.ActionURL"><span class="divlink"></span></a>
						@result.EntityType: @result.Title
					</h3>
				</div>
				<div class="panel-body">
					@foreach (var hit in result.Hits)
					{
						string classname = null;
						if (!string.IsNullOrEmpty(hit.Property))
						{
							<h6>@hit.Property</h6>
							classname = "col-sm-offset-1";
						}
						<div class="@classname">
							@hit.Text
						</div>
					}
				</div>
			</div>
		</div>
	}
</div>


@using (Html.Delayed(null, "Masonry_Tiles"))
{
	<script type="text/javascript">
		var regex = /@(ViewBag.SearchPattern)/i;
		$('#searchresults').highlight(regex);

		var msnry = new Masonry('#searchresults', {
			itemSelector: '.col-lg-6',
			resizeable: true,
		});
	</script>
}