@using ILK_Protokoll.util
@model IEnumerable<ILK_Protokoll.Models.Assignment>

<table class="table table-striped table-hover table-sortable" id="Assignments_table">
	<thead>
		<tr>
			<th class="col-xs-4 hidden-xs">
				@Html.DisplayNameFor(model => model.TopicID)
			</th>
			<th class="col-xs-5">
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th class="col-xs-1">
				@Html.DisplayNameFor(model => model.DueDate)
			</th>
			<th class="col-xs-1">
				@Html.DisplayNameFor(model => model.ReminderSent)
			</th>
		</tr>
	</thead>
	<tbody>

		@foreach (var item in Model)
		{
			string visual;
			if ((DateTime.Now - item.DueDate).Duration().TotalDays < 1)
			{
				visual = "warning";
			}
			else if (item.DueDate < DateTime.Now && !item.IsDone)
			{
				visual = "danger";
			}
			else
			{
				visual = null;
			}
			<tr class="@visual">
				<td class="hidden-xs">
					@Html.ActionLink(item.Topic.Title.Shorten(100), "Details", "Topics", new {id = item.TopicID}, null)
				</td>
				<td>
					<div style="position: relative;">
						@item.Title.Shorten(100)
						<a href="@Url.Action("Details", "Assignments", new {id = item.ID})"><span class="divlink"></span></a>
					</div>
				</td>
				<td>
					@item.DueDate.ToShortDateString()
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ReminderSent)
				</td>
			</tr>
		}
	</tbody>
</table>