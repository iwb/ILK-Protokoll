@model ILK_Protokoll.ViewModels.AssignmentEdit

@{
	ViewBag.Title = "Aufgabe bearbeiten (" + Model.Title + ")";
}

<h2>@ViewBag.Title</h2>

<div>
	@Html.ActionLink("Zurück zum Index", "Index")<br />
	@Html.ActionLink("Zurück zu Details", "Details", new {id = Model.ID})
</div>
<hr />


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.HiddenFor(model => model.ID)
		@Html.HiddenFor(model => model.TopicID)

		<div class="form-group">
			@Html.LabelFor(model => model.Type, new {@class = "control-label col-md-2"})
			<div class="col-md-2">
				@Html.EnumDropDownListFor(model => model.Type, new {@class = "form-control"})
				@Html.ValidationMessageFor(model => model.Type, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.OwnerID, new {@class = "control-label col-md-2"})
			<div class="col-md-2">
				@Html.DropDownListFor(m => m.OwnerID, (SelectList)ViewBag.UserList, "(bitte auswählen)", new {@class = "form-control"})
				@Html.ValidationMessageFor(model => model.OwnerID, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DueDate, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.DueDate, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.DueDate, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsActive, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.IsActive, new {htmlAttributes = new {@class = "form-control", data_toggle = "tooltip", data_placement = "right", title = "Das Aktiv-Flag bestimmt, ob der Besitzer E-Mails erhält. Es kann nur einmal gesetzt werden."}})
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-5">
				<input type="submit" value="Speichern" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>