@model ILK_Protokoll.Models.Assignment

@{
	ViewBag.Title = "Aufgabe erstellen";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.TopicID)
	
	<div class="form-horizontal">
		<hr />
		<div class="form-group">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-5">
				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-5">
				@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.OwnerID, new { @class = "control-label col-md-2" })
			<div class="col-md-5">
				@Html.DropDownListFor(m => m.OwnerID, (SelectList)ViewBag.UserList, "(bitte auswählen)", new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-5">
				@Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-5">
				<input type="submit" value="Erstellen" class="btn btn-default" />
			</div>
		</div>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>
}

<div>
	@Html.ActionLink("Verwerfen", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}