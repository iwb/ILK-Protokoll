@using ILK_Protokoll.util
@model IEnumerable<ILK_Protokoll.Models.Document>

<table class="table table-striped file-table table-sortable" id="attachments_@ViewBag.EntityID">
	<thead>
		<tr>
			<th class="col-xs-1"></th>
			<th>@Html.DisplayNameFor(model => model.DisplayName)</th>
			<th class="col-xs-1">@Html.DisplayNameFor(model => model.LatestRevision.FileSize)</th>
			<th class="col-xs-1">@Html.DisplayNameFor(model => model.LatestRevision.Uploader)</th>
			<th class="col-xs-2">@Html.DisplayNameFor(model => model.Created)</th>
			<th class="col-xs-1" style="min-width: 8em;">Aktionen</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var file in Model)
		{
			Html.RenderPartial("~/Views/Attachments/_AttachmentRow.cshtml", file);
		}
	</tbody>
	<tfoot>
		@if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
		{
			<tr>
				<td colspan="6">
					<span style="text-align: right;">@Html.Raw(Html.Encode(ViewBag.StatusMessage).Replace("\n", "<br />"))</span>
				</td>
			</tr>
		}
	</tfoot>
</table>

@if (Request.IsAjaxRequest())
{
	<script type="text/javascript"> $("#attachments_@ViewBag.EntityID time[rel=timeago]").timeago(); </script>
}

@using (Html.Delayed())
{
	<script type="text/javascript">
		function removeAttachment(element) {
			if ($(element).siblings().length == 0) {
				$(element).parent().parent().replaceWith("<div class=\"panel-body\" id=\"attachments_@ViewBag.EntityID\">Keine Dokumente vorhanden.</div>"); // Remove the whole table
			} else {
				$(element).remove();
				$("table.table-sortable").trigger("update");
			}
		}
	</script>
}