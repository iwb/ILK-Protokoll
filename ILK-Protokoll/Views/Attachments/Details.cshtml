@using ILK_Protokoll.util
@model ILK_Protokoll.Models.Document
@{
	ViewBag.Title = "Details (" + Model.DisplayName + ")";
}

<h2>@ViewBag.Title</h2>
<hr />
<div>
	@if (Model.Deleted != null)
	{
		<div class="alert alert-info">
			Diese Datei befindet sich im @Html.ActionLink("Papierkorb", "Index", "RecycleBin", new {Area = "Administration"}, new {@class = "alert-link"}).
		</div>
	}
	<dl class="dl-horizontal">
		@if (Model.TopicID != null)
		{
			<dt>
				@Html.DisplayNameFor(model => Model.TopicID)
			</dt>
			<dd>
				@Html.ActionLink(Model.Topic.Title, "Details", "Topics", new {Area = "", id = Model.TopicID}, null)
			</dd>
		}
		@if (Model.EmployeePresentationID != null)
		{
			<dt>
				@Html.DisplayNameFor(model => Model.EmployeePresentationID)
			</dt>
			<dd>
				@{
					string url = Request.Url != null ? Request.Url.PathAndQuery : null;
				}
				@Html.ActionLink(Model.EmployeePresentation.ToString(), "Edit", "LEmployeePresentations", new {Area = "Session", id = Model.EmployeePresentationID, returnURL = url}, null)
			</dd>
		}

		<dt>
			@Html.DisplayNameFor(model => model.DisplayName)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.DisplayName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Created)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.Created)
		</dd>

		@if (Model.Deleted != null)
		{
			<dt>
				@Html.DisplayNameFor(model => model.Deleted)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.Created)
			</dd>
		}

		<dt>
			@Html.DisplayNameFor(model => model.LatestRevision.FileSize)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.LatestRevision.FileSize)
		</dd>
	</dl>
	
	<h3>Alle Versionen</h3>

	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th class="col-sm-2">
					@Html.DisplayColumnNameFor(Model.Revisions, rev => rev.Created)
				</th>
				<th>
					@Html.DisplayColumnNameFor(Model.Revisions, rev => rev.Uploader)
				</th>
				<th class="col-sm-1">
					@Html.DisplayColumnNameFor(Model.Revisions, rev => rev.FileSize)
				</th>
				<th>
					Dateiname
				</th>
				<th class="col-sm-1">
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var revision in Model.Revisions.OrderByDescending(rev => rev.Created))
			{
				<tr>
					<th>
						@Html.DisplayFor(model => revision.Created)
					</th>
					<th>
						@Html.DisplayFor(model => revision.Uploader.LongName)
					</th>
					<th>
						@Html.DisplayFor(model => revision.FileSize, "FileSize")
					</th>
					<th>
						@Html.DisplayFor(model => revision.FileName)
					</th>
					<th>
						@Html.ActionLink("Download",
							"Download",
							"Attachments",
							new {id = revision.GUID},
							new {@class = "btn btn-primary", target = "_blank"})
					</th>
				</tr>
			}
		</tbody>
	</table>
	@if (ViewBag.ShowUpload)
	{
		<h3>Neue Version hochladen</h3>
		using (Html.BeginForm("CreateNewRevision",
			"Attachments",
			new {id = Model.ID},
			FormMethod.Post,
			new
			{
				@class = "form-horizontal",
				enctype = "multipart/form-data"
			}))
		{
			<div class="row">
				@Html.AntiForgeryToken()
				<label for="file" class="control-label col-sm-2">Datei auswählen:</label>
				<div class="col-sm-8">
					<input type="file" class="form-control" id="file" name="file" />
				</div>
				<div class="col-sm-2">
					<button type="submit" class="btn btn-primary form-control">Hochladen</button>
				</div>
			</div>
		}
	}
	else
	{
		<p>Es dürfen keine neuen Versionen hochgeladen werden.</p>
	}
</div>