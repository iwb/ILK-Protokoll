@using ILK_Protokoll.Models
@using ILK_Protokoll.ViewModels
@model ILK_Protokoll.ViewModels.VoteListViewModel
@{
	string username = ((User)ViewBag.CurrentUser).ShortName;
}
@* Für die eigene Stimme *@
@helper GetVoteLink(VoteKind vk)
{
	<a href="@Url.Action("_Register", new {topicID = Model.TopicID, vote = vk.ToString(), linkLevel = Model.LinkLevel})"
	   data-ajax="true"
	   data-ajax-method="POST"
	   data-ajax-mode="replace"
	   data-ajax-update="#auditorlist_@Model.TopicID"
	   data-ajax-failure="DisplayErrorMessage('#auditorlist_@Model.TopicID', 'Die Stimme konnte nicht verarbeitet werden. &lt;br /&gt;' + xhr.responseText);"
	   class="votelink">@Html.DisplayFor(m => vk)</a>
}
@* Für Abstimmen in Vertretung *@
@helper GetVoteLink2(User voter, VoteKind vk)
{
	<a href="@Url.Action("_Register2", new {topicID = Model.TopicID, voterID = voter.ID, vote = vk.ToString(), linkLevel = Model.LinkLevel})"
	   data-ajax="true"
	   data-ajax-method="POST"
	   data-ajax-mode="replace"
	   data-ajax-update="#auditorlist_@Model.TopicID"
	   data-ajax-failure="DisplayErrorMessage('#auditorlist_@Model.TopicID', 'Die Stimme konnte nicht verarbeitet werden. &lt;br /&gt;' + xhr.responseText);"
	   class="votelink">@Html.DisplayFor(m => vk)</a>
}

<ul class="userlist">
	@if (Model.OwnVote != null)
	{
		<li class="ownvote">
			@if (Model.LinkLevel == VoteLinkLevel.None)
			{
				@Html.DisplayFor(m => m.OwnVote.Kind)
				@username
			}
			else
			{
				<div class="popover-markup">
					<a class="trigger">
						@Html.DisplayFor(m => m.OwnVote.Kind) @username
					</a>
					<div class="content hide">
						@GetVoteLink(VoteKind.None)
						@GetVoteLink(VoteKind.Approved)
						@GetVoteLink(VoteKind.Reservation)
						@GetVoteLink(VoteKind.Rejected)
					</div>
				</div>
			}
		</li>
	}
	@if (Model.LinkLevel > VoteLinkLevel.OnlyMine)
	{
		foreach (var vote in Model.OtherVotes)
		{
			<li>
				<div class="popover-markup">
					<a class="trigger">
						@Html.DisplayFor(m => vote.Kind) @vote.Voter
					</a>
					<div class="content hide">
						@GetVoteLink2(vote.Voter, VoteKind.None)
						@GetVoteLink2(vote.Voter, VoteKind.Approved)
						@GetVoteLink2(vote.Voter, VoteKind.Reservation)
						@GetVoteLink2(vote.Voter, VoteKind.Rejected)
					</div>
				</div>
			</li>
		}
	}
	else
	{
		foreach (var vote in Model.OtherVotes)
		{
			<li>
				@Html.DisplayFor(m => vote.Kind) @vote.Voter
			</li>
		}
	}
</ul>

@if (IsAjax)
{
	<script type="text/javascript">
		if (typeof enablePopovers !== 'undefined')
			enablePopovers();
	</script>
}