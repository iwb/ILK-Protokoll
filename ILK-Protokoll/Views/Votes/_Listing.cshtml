@model IEnumerable<ILK_Protokoll.Models.Vote>
@using ILK_Protokoll.util
@using ILK_Protokoll.Models

@helper GetVoteIcon(VoteKind vk)
{
	string iconname = "";
	switch (vk)
	{
		case VoteKind.None:
			iconname = "glyphicon-record";
			break;

		case VoteKind.Approved:
			iconname = "glyphicon-ok-sign";
			break;

		case VoteKind.Reservation:
			iconname = "glyphicon-question-sign";
			break;

		case VoteKind.Rejected:
			iconname = "glyphicon-remove-sign";
			break;
	}
	<span class="glyphicon @iconname" title="@vk.GetDescription()"></span> } @*Kein Zeilenumbruch*@

@helper GetVoteLink(VoteKind vk)
{
<a data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-update="#auditorlist_@ViewBag.TopicID" class="votelink" href="/Votes/_Register?TopicID=@ViewBag.TopicID&amp;vote=@vk.DisplayName()">@GetVoteIcon(vk)</a> } @*Kein Zeilenumbruch*@

@helper GetVoteForm()
{
	@GetVoteLink(VoteKind.None) @GetVoteLink(VoteKind.Approved) @GetVoteLink(VoteKind.Reservation) @GetVoteLink(VoteKind.Rejected)
}

<ul class="auditorlist">
	@{
		Vote ownvote = ViewBag.ownvote as Vote;
		if (ownvote != null)
		{
			<li class="ownvote">

				<div class="popover-markup">
					<a class="trigger" id="ownvote_@ViewBag.TopicID">
						@GetVoteIcon(ownvote.Kind)@ViewBag.CurrentUser.Name
					</a>
					<div class="content hide votelinks">
						@GetVoteForm()
					</div>
				</div>				
			</li>
		}
	}

	@foreach (Vote vote in Model)
	{
		<li>
			@GetVoteIcon(vote.Kind)
			@vote.Voter
		</li>
	}
</ul>

<script type="text/javascript">
	if ($) {
		$('.popover-markup > .trigger').popover({
			html: true,
			content: function () {
				return $(this).parent().find('.content').html();
			},
			container: 'body',
			placement: 'bottom'
		}).click(function (e) {
			e.stopPropagation();
		});
	}
</script>