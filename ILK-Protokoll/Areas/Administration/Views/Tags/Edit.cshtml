@using ILK_Protokoll.util
@model ILK_Protokoll.Models.Tag

@{
	ViewBag.Title = "Tag bearbeiten";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new {@class = "text-danger"})
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, new {@class = "control-label col-sm-2"})
			<div class="col-sm-3">
				@Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.BackgroundColor, new {@class = "control-label col-sm-2"})
			<div class="col-sm-3">
				@Html.EditorFor(model => model.BackgroundColor, new {htmlAttributes = new {@class = "form-control", id = "bg-color-picker"}})
				@Html.ValidationMessageFor(model => model.BackgroundColor, "", new {@class = "text-danger"})
			</div>
		</div>
		
		<div class="form-group">
			<div class="col-sm-offset-2 col-sm-3" id="bg-jspicker">
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FontColor, new {@class = "control-label col-sm-2"})
			<div class="col-sm-3">
				@Html.EditorFor(model => model.FontColor, new {htmlAttributes = new {@class = "form-control", id = "font-color-picker"}})
				@Html.ValidationMessageFor(model => model.FontColor, "", new {@class = "text-danger"})
			</div>
		</div>
		
		<div class="form-group">
			<div class="col-sm-offset-2 col-sm-3" id="font-jspicker">
			</div>
		</div>

		<div class="form-group">
			<div class="col-sm-offset-2 col-sm-3">
				<div class="form-control-static">
					<a id="perform-autocolor">Textfarbe automatisch festlegen</a>
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-sm-offset-2 col-sm-3">
				<div class="form-control-static">
					<span class="label" id="color-preview">Vorschau</span>
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-sm-3">
				<input type="submit" value="Speichern" class="btn btn-primary" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Zurück zum Index", "Index")
</div>

@using (Html.Delayed(null, "ColorPreview"))
{
	<script type="text/javascript">
		function getContrastYIQ(hexcolor) {
			if (hexcolor[0] == '#') {
				hexcolor = hexcolor.substr(1);
			}
			if (hexcolor.length < 3) {
				return undefined;
			} else if (hexcolor.length < 6) {
				hexcolor = hexcolor[0] + hexcolor[0] + hexcolor[1] + hexcolor[1] + hexcolor[2] + hexcolor[2];
			}
			var r = parseInt(hexcolor.substr(0, 2), 16);
			var g = parseInt(hexcolor.substr(2, 2), 16);
			var b = parseInt(hexcolor.substr(4, 2), 16);
			var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
			return (yiq >= 128) ? '#000000' : '#FFFFFF';
		}

		var userChoice = $('#font-color-picker')[0].value != getContrastYIQ($('#bg-color-picker')[0].value);

		$('#bg-color-picker').on("change keyup", function() {
			$('#color-preview').css("background-color", $(this)[0].value);
			$('#bg-jspicker').colpickSetColor($(this)[0].value, false);
			var ccolor = getContrastYIQ($(this)[0].value);
			if (!userChoice && ccolor !== undefined) {
				$('#font-color-picker')[0].value = ccolor;
				$('#color-preview').css("color", ccolor);
				$('#font-jspicker').colpickSetColor(ccolor, false);
			}
		});

		$('#font-color-picker').on("change keyup", function() {
			$('#color-preview').css("color", $(this)[0].value);
			userChoice = true;
			$('#font-jspicker').colpickSetColor($(this)[0].value, false);
		});

		$('#color-preview').css("background-color", $('#bg-color-picker')[0].value);
		$('#color-preview').css("color", $('#font-color-picker')[0].value);

		$('#perform-autocolor').click(function() {
			userChoice = false;
			$('#bg-color-picker').change();
		});

		// Colorpicker für Internet Explorer
		// Dieser unterstützt leider noch nicht <input type="color" />
		function enableColorPicker(pickerdiv, formfield) {

			$(pickerdiv).colpick({
					flat: true,
					submit: false,
					colorScheme: 'dark',
					color: $(formfield)[0].value,
					onChange: function(hsb, hex, rgb, el, bySetColor) {
						if (!bySetColor) {
							$(formfield)[0].value = '#' + hex;
							$(formfield).change();
						}
					}
				}).
				keyup(function() {
					$(this).colpickSetColor(this.value);
				});
		}

		enableColorPicker('#bg-jspicker', '#bg-color-picker');
		enableColorPicker('#font-jspicker', '#font-color-picker');

	</script>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}