@using ILK_Protokoll.util
@model ILK_Protokoll.Models.Tag


@using (Html.BeginForm("Create", "Tags", null, FormMethod.Post, new { @class = "form-inline" }))
{
	<div class="form-group col-sm-2 form-control-static">
		<b class="">Neues Tag anlegen:</b>
	</div>
	@Html.AntiForgeryToken()
	<div class="form-group col-sm-2">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "sr-only" })
		@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = Html.GetDisplayName(model => model.Name) } })
	</div>

	<div class="form-group col-sm-2">
		@Html.LabelFor(model => model.BackgroundColor, htmlAttributes: new { @class = "sr-only" })
		@Html.EditorFor(model => model.BackgroundColor, new { htmlAttributes = new { @class = "form-control", style = "width: 100%;", id="color-picker" } })
	</div>
	<div class="form-group col-sm-1">
		<div class="form-control-static">
			<span class="label" id="color-preview">Vorschau</span>
		</div>
	</div>

	<div class="form-group">
		<input type="submit" value="Speichern" class="btn btn-default" />
	</div>
	<div class="form-group">
		@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		@Html.ValidationMessageFor(model => model.BackgroundColor, "", new { @class = "text-danger" })
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>
}

@using (Html.Delayed(null, "ColorPreview"))
{
	<script type="text/javascript">
		function getContrastYIQ(hexcolor) {
			var r = parseInt(hexcolor.substr(1, 2), 16);
			var g = parseInt(hexcolor.substr(3, 2), 16);
			var b = parseInt(hexcolor.substr(5, 2), 16);
			var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
			return (yiq >= 128) ? '#000' : '#FFF';
		}

		$('#color-picker').on("change blur keyup", function() {
			$('#color-preview').css("background-color", $(this)[0].value);
			$('#color-preview').css("color", getContrastYIQ($(this)[0].value));
		});
	</script>
}