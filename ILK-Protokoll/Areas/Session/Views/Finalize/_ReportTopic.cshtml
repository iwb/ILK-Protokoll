@using ILK_Protokoll.util
@model ILK_Protokoll.Models.Topic


<div class="panel panel-primary">
	<div class="panel-heading">
		<h3 class="panel-title">Stammdaten</h3>
	</div>
	<div class="panel-body">
		<b>@Html.DisplayNameFor(model => model.Title):</b>
		<p>@Html.ActionLink(Model.Title, "Details", "Topics", new {Area = "", id = Model.ID}, null)</p>

		<div class="row">
			<div class="col-xs-4">
				<dl class="dl-horizontal">
					<dt>@Html.DisplayNameFor(model => model.SessionTypeID)</dt>
					<dd>@Html.DisplayFor(model => model.SessionType.Name)</dd>

					<dt>@Html.DisplayNameFor(model => model.Time)</dt>
					<dd>@Html.DisplayFor(model => model.Time)</dd>

					@if (Model.TargetSessionTypeID != null)
					{
						<dt>@Html.DisplayNameFor(model => model.TargetSessionTypeID)</dt>
						<dd>@Html.DisplayFor(model => model.TargetSessionType.Name)</dd>
					}
				</dl>
			</div>
			<div class="col-xs-4">
				<dl class="dl-horizontal">
					<dt>@Html.DisplayNameFor(model => model.OwnerID)</dt>
					<dd>@Html.DisplayFor(model => model.Owner.ShortName)</dd>

					<dt>@Html.DisplayNameFor(model => model.Priority)</dt>
					<dd>@Model.Priority.DisplayName()</dd>
				</dl>
			</div>
			<div class="col-xs-4">
				<dl class="dl-horizontal">
					<dt>@Html.DisplayNameFor(model => model.Creator)</dt>
					<dd>@Html.DisplayFor(model => model.Creator.LongName)</dd>

					<dt>@Html.DisplayNameFor(model => model.Created)</dt>
					<dd>@Html.DisplayFor(model => model.Created)</dd>
					@if (ViewBag.TopicHistoryCount > 0)
					{
						<dt>@Html.DisplayNameFor(model => model.ValidFrom)</dt>
						<dd>
							@Html.DisplayFor(model => model.ValidFrom) (Insgesamt @ViewBag.TopicHistoryCount Mal geändert)
						</dd>
					}
				</dl>
			</div>
		</div>

		<div class="row">
			<div class="col-md-6">
				<h4 style="font-weight: bold;">
					@Html.DisplayNameFor(model => model.Description)
				</h4>
				@Html.DisplayWithLinksFor(model => model.Description, "String_Multiline")
			</div>
			<div class="col-md-6">
				<h4 style="font-weight: bold;">
					@Html.DisplayNameFor(model => model.Proposal)
				</h4>
				@Html.DisplayWithLinksFor(model => model.Proposal, "String_Multiline")
			</div>
		</div>
	</div>



	<div class="panel panel-primary" style="background-color: #DDD">
		<div class="panel-heading">
			<h3 class="panel-title">@Html.DisplayNameFor(model => model.Votes)</h3>
		</div>
		<div class="panel-body" id="auditorlist_@Model.ID">
			@{
				Html.RenderPartial("_ReportVotes", Model.Votes);
			}
		</div>
	</div>
</div>


<div class="panel panel-primary">
	<div class="panel-heading">
		<h3 class="panel-title">Aufgaben</h3>
	</div>
	@if (Model.Assignments.Any())
	{
		Html.RenderPartial("_ReportAssignments", Model.Assignments.OrderBy(a => a.Type).ThenByDescending(a => a.DueDate));
	}
	else
	{
		<div class="panel-body">
			Diese Diskussion enthält keine Aufgaben.
		</div>
	}
</div>


<div class="panel panel-primary comment-panel">
	<div class="panel-heading">
		<h3 class="panel-title">@Html.DisplayNameFor(model => model.Comments)</h3>
	</div>
	<div id="comments_@Model.ID">
		@if (Model.Comments.Any())
		{
			Html.RenderPartial("_ReportComments", Model.Comments);
		}
		else
		{
			<div class="panel-body">
				Es sind keine Kommentare vorhanden.
			</div>
		}
	</div>
</div>

<div class="panel panel-primary">
	<div class="panel-heading">
		<h3 class="panel-title">Gelesene Push-Benachrichtigungen</h3>
	</div>
	<div class="panel-body" id="pushlist_@Model.ID">
		@Html.Action("_DisplayListTopic", "Push", new {topic = Model, Area = ""})
	</div>
</div>




<div class="row">
	<div class="col-md-12">
		<div class="panel panel-primary">
			<div class="panel-heading">
				<h3 class="panel-title">@Html.DisplayNameFor(model => model.Documents)</h3>
			</div>
			@if (Model.Documents.Count(a => a.Deleted == null) == 0)
			{
				<div class="panel-body" id="attachments_@Model.ID">Keine Dokumente vorhanden.</div>
			}
			else
			{
				Html.RenderPartial("_ReportAttachments", Model.Documents.Where(a => a.Deleted == null));
			}
		</div>
	</div>
</div>