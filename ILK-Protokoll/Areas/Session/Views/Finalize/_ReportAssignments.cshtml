@using ILK_Protokoll.util
@model IEnumerable<ILK_Protokoll.Models.Assignment>


<table class="table table-striped table-hover table-sortable">
	<thead>
	<tr>
		<th class="col-xs-1">
			@Html.DisplayNameFor(model => model.Type)
		</th>
		<th class="col-xs-1">
			@Html.DisplayNameFor(model => model.OwnerID)
		</th>
		<th class="col-xs-2">
			@Html.DisplayNameFor(model => model.TopicID)
		</th>
		<th class="col-xs-4">
			@Html.DisplayNameFor(model => model.Title)
		</th>
		<th class="col-xs-1">
			@Html.DisplayNameFor(model => model.DueDate)
		</th>
		<th class="col-xs-1">
			@Html.DisplayNameFor(model => model.ReminderSent)
		</th>
		<th class="col-xs-1">
			@Html.DisplayNameFor(model => model.IsDone)
		</th>
		<th class="col-xs-1">Aktionen</th>
	</tr>
	</thead>
	<tbody>
	@foreach (var item in Model)
	{
		string visual;
		if ((DateTime.Now - item.DueDate).Duration().TotalDays < 1)
		{
			visual = "warning";
		}
		else if (item.DueDate < DateTime.Now && !item.IsDone)
		{
			visual = "danger";
		}
		else
		{
			visual = null;
		}
		<tr>
			<td>
				@item.Type.DisplayName()
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Owner.ShortName)
			</td>
			<td>
				@Html.ActionLink(item.Topic.Title.Shorten(100), "Details", "Topics", new {id = item.TopicID}, null)
			</td>
			<td>
				@item.Title.Shorten(100)
			</td>
			<td class="@visual">
				@item.DueDate.ToShortDateString()
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ReminderSent)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.IsDone)
			</td>
			<td class="actions">
				<a href="@Url.Action("Details", "Assignments", new {Area = "", id = item.ID})">
					<span class="glyphicon glyphicon-expand" title="Details"></span>
				</a>
				&nbsp;
				<a href="@Url.Action("Edit", "Assignments", new {Area = "", id = item.ID})">
					<span class="glyphicon glyphicon-edit" title="Bearbeiten"></span>
				</a>
			</td>
		</tr>
	}
	</tbody>
</table>