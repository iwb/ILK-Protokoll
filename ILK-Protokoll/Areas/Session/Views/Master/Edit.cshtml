@using ILK_Protokoll.Models
@model ILK_Protokoll.Areas.Session.Models.ActiveSession

@{
	ViewBag.Title = "Stammdaten";
	var users = (Dictionary<User, bool>)ViewBag.UserDict;
}
@using (Html.BeginForm("Edit", "Master", new {Area = "Session"}, FormMethod.Post))
{
	<div class="index-action">
		<button class="btn btn-default disabled">Zurück</button>
		<button class="btn btn-primary" type="submit">Speichern & Weiter</button>
	</div>

	<h2>@ViewBag.Title</h2>

	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new {@class = "text-danger"})
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.PresentUsers, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => users, "Dictionary_User_bool")
				@Html.ValidationMessageFor(model => model.PresentUsers, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AdditionalAttendees, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.AdditionalAttendees, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.AdditionalAttendees, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Notes, new {@class = "control-label col-md-2"})
			<div class="col-md-5">
				@Html.EditorFor(model => model.Notes, new {htmlAttributes = new {@class = "form-control"}})
				@Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Start, new {@class = "control-label col-md-2"})
			<div class="col-md-5 static-text">
				@Html.DisplayFor(model => model.Start)
			</div>
		</div>
	</div>
}
<div style="margin-top: 100px;"></div>
<div class="alert alert-info">
	Falls Sie diese Sitzung versehentlich eröffnet haben, können sie <a class="alert-link" id="abortLink">die Sitzung abbrechen</a> ohne ein Protokoll zu generieren.
	@using (Html.BeginForm(
		"AbortSession",
		"Master",
		new {Area = "Session"},
		FormMethod.Post, new
		{
			id = "abortForm",
			style = "display:none;"
		}))
	{
		<div style="margin-top: 20px;"></div>
		@Html.AntiForgeryToken()
		@Html.HiddenFor(m => m.ID)
	<input type="submit" value="Sitzung abbrechen" class="btn btn-danger" id="submitButton">
	}
</div>

<script type="text/javascript">
	$('#abortLink').click(function() {
		$('#abortForm').show(400);
	});
</script>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}